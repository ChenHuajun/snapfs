Parsed test spec with 2 sessions

starting permutation: s1_mk_sn s1_seq_n s2_seq_n s1_mk_sn s1_seq_n s2_seq_n s1_mk_sn s1_seq_n s2_seq_n s1_rc_sn_1 s1_seq_n s2_seq_n s1_seq_c s2_seq_c s1_rc_sn_1 s1_seq_n s2_seq_n s1_seq_c s2_seq_c s1_rc_sn_1 s1_seq_n s2_seq_n s1_seq_c s2_seq_c s1_rc_sn_1 s1_seq_n s2_seq_n s1_seq_c s2_seq_c
step s1_mk_sn: 
	select 1 as "make_snapshot" from pg_make_snapshot();

make_snapshot  

1              
step s1_seq_n: 
	select nextval( 'seq1' );

nextval        

1              
step s2_seq_n: 
	select nextval( 'seq1' );

nextval        

2              
step s1_mk_sn: 
	select 1 as "make_snapshot" from pg_make_snapshot();

make_snapshot  

1              
step s1_seq_n: 
	select nextval( 'seq1' );

nextval        

3              
step s2_seq_n: 
	select nextval( 'seq1' );

nextval        

4              
step s1_mk_sn: 
	select 1 as "make_snapshot" from pg_make_snapshot();

make_snapshot  

1              
step s1_seq_n: 
	select nextval( 'seq1' );

nextval        

5              
step s2_seq_n: 
	select nextval( 'seq1' );

nextval        

6              
step s1_rc_sn_1: 
	select pg_recover_to_snapshot( ( select recent_snapshot from pg_control_snapshot() ) );

pg_recover_to_snapshot

               
step s1_seq_n: 
	select nextval( 'seq1' );

nextval        

5              
step s2_seq_n: 
	select nextval( 'seq1' );

nextval        

6              
step s1_seq_c: 
	select currval( 'seq1' );

currval        

5              
step s2_seq_c: 
	select currval( 'seq1' );

currval        

6              
step s1_rc_sn_1: 
	select pg_recover_to_snapshot( ( select recent_snapshot from pg_control_snapshot() ) );

pg_recover_to_snapshot

               
step s1_seq_n: 
	select nextval( 'seq1' );

nextval        

3              
step s2_seq_n: 
	select nextval( 'seq1' );

nextval        

4              
step s1_seq_c: 
	select currval( 'seq1' );

currval        

3              
step s2_seq_c: 
	select currval( 'seq1' );

currval        

4              
step s1_rc_sn_1: 
	select pg_recover_to_snapshot( ( select recent_snapshot from pg_control_snapshot() ) );

pg_recover_to_snapshot

               
step s1_seq_n: 
	select nextval( 'seq1' );

nextval        

1              
step s2_seq_n: 
	select nextval( 'seq1' );

nextval        

2              
step s1_seq_c: 
	select currval( 'seq1' );

currval        

1              
step s2_seq_c: 
	select currval( 'seq1' );

currval        

2              
step s1_rc_sn_1: 
	select pg_recover_to_snapshot( ( select recent_snapshot from pg_control_snapshot() ) );

pg_recover_to_snapshot

               
step s1_seq_n: 
	select nextval( 'seq1' );

ERROR:  relation "seq1" does not exist
step s2_seq_n: 
	select nextval( 'seq1' );

ERROR:  relation "seq1" does not exist
step s1_seq_c: 
	select currval( 'seq1' );

ERROR:  relation "seq1" does not exist
step s2_seq_c: 
	select currval( 'seq1' );

ERROR:  relation "seq1" does not exist
